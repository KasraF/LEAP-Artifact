parameters:
  - name: VSCODE_CLI_TARGET
    type: string
  - name: VSCODE_CLI_ARTIFACT
    type: string
  - name: VSCODE_CLI_ENV
    type: object
    default: {}

steps:
  - script: cargo build --release --target ${{ parameters.VSCODE_CLI_TARGET }} --bin=code
    displayName: Compile ${{ parameters.VSCODE_CLI_TARGET }}
    workingDirectory: $(Build.SourcesDirectory)/cli
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
      ${{ each pair in parameters.VSCODE_CLI_ENV }}:
        ${{ pair.key }}: ${{ pair.value }}

  - ${{ if or(contains(parameters.VSCODE_CLI_TARGET, '-windows-'), contains(parameters.VSCODE_CLI_TARGET, '-darwin')) }}:
    - task: ArchiveFiles@2
      inputs:
        ${{ if contains(parameters.VSCODE_CLI_TARGET, '-windows-') }}:
          rootFolderOrFile: $(Build.SourcesDirectory)/cli/target/${{ parameters.VSCODE_CLI_TARGET }}/release/code.exe
        ${{ if contains(parameters.VSCODE_CLI_TARGET, '-darwin') }}:
          rootFolderOrFile: $(Build.SourcesDirectory)/cli/target/${{ parameters.VSCODE_CLI_TARGET }}/release/code
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/${{ parameters.VSCODE_CLI_ARTIFACT }}.zip

    - publish: $(Build.ArtifactStagingDirectory)/${{ parameters.VSCODE_CLI_ARTIFACT }}.zip
      artifact: ${{ parameters.VSCODE_CLI_ARTIFACT }}
      displayName: Publish ${{ parameters.VSCODE_CLI_ARTIFACT }} artifact

  - ${{ else }}:
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: $(Build.SourcesDirectory)/cli/target/${{ parameters.VSCODE_CLI_TARGET }}/release/code
        includeRootFolder: false
        archiveType: tar
        tarCompression: gz
        archiveFile: $(Build.ArtifactStagingDirectory)/${{ parameters.VSCODE_CLI_ARTIFACT }}.tar.gz

    - publish: $(Build.ArtifactStagingDirectory)/${{ parameters.VSCODE_CLI_ARTIFACT }}.tar.gz
      artifact: ${{ parameters.VSCODE_CLI_ARTIFACT }}
      displayName: Publish ${{ parameters.VSCODE_CLI_ARTIFACT }} artifact
